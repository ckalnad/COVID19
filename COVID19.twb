<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='Sheet1 (owid-covid-data)' inline='true' name='federated.07elu4v0whxubf1241ezr0d1mtr7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='owid-covid-data' name='excel-direct.175x9zq19fl2om18p8c9g1pynku3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ckaln/Downloads/owid-covid-data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.175x9zq19fl2om18p8c9g1pynku3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AH10001:no:A1:AH2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='string' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='integer' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases_per_million' ordinal='8' />
            <column datatype='real' name='new_cases_per_million' ordinal='9' />
            <column datatype='real' name='total_deaths_per_million' ordinal='10' />
            <column datatype='real' name='new_deaths_per_million' ordinal='11' />
            <column datatype='integer' name='total_tests' ordinal='12' />
            <column datatype='integer' name='new_tests' ordinal='13' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='14' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='15' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='16' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='17' />
            <column datatype='string' name='tests_units' ordinal='18' />
            <column datatype='real' name='stringency_index' ordinal='19' />
            <column datatype='integer' name='population' ordinal='20' />
            <column datatype='real' name='population_density' ordinal='21' />
            <column datatype='real' name='median_age' ordinal='22' />
            <column datatype='real' name='aged_65_older' ordinal='23' />
            <column datatype='real' name='aged_70_older' ordinal='24' />
            <column datatype='real' name='gdp_per_capita' ordinal='25' />
            <column datatype='real' name='extreme_poverty' ordinal='26' />
            <column datatype='real' name='cvd_death_rate' ordinal='27' />
            <column datatype='real' name='diabetes_prevalence' ordinal='28' />
            <column datatype='real' name='female_smokers' ordinal='29' />
            <column datatype='real' name='male_smokers' ordinal='30' />
            <column datatype='real' name='handwashing_facilities' ordinal='31' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='32' />
            <column datatype='real' name='life_expectancy' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.175x9zq19fl2om18p8c9g1pynku3' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:AH10001:no:A1:AH2147483647:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='string' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='integer' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases_per_million' ordinal='8' />
            <column datatype='real' name='new_cases_per_million' ordinal='9' />
            <column datatype='real' name='total_deaths_per_million' ordinal='10' />
            <column datatype='real' name='new_deaths_per_million' ordinal='11' />
            <column datatype='integer' name='total_tests' ordinal='12' />
            <column datatype='integer' name='new_tests' ordinal='13' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='14' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='15' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='16' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='17' />
            <column datatype='string' name='tests_units' ordinal='18' />
            <column datatype='real' name='stringency_index' ordinal='19' />
            <column datatype='integer' name='population' ordinal='20' />
            <column datatype='real' name='population_density' ordinal='21' />
            <column datatype='real' name='median_age' ordinal='22' />
            <column datatype='real' name='aged_65_older' ordinal='23' />
            <column datatype='real' name='aged_70_older' ordinal='24' />
            <column datatype='real' name='gdp_per_capita' ordinal='25' />
            <column datatype='real' name='extreme_poverty' ordinal='26' />
            <column datatype='real' name='cvd_death_rate' ordinal='27' />
            <column datatype='real' name='diabetes_prevalence' ordinal='28' />
            <column datatype='real' name='female_smokers' ordinal='29' />
            <column datatype='real' name='male_smokers' ordinal='30' />
            <column datatype='real' name='handwashing_facilities' ordinal='31' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='32' />
            <column datatype='real' name='life_expectancy' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AH10001:no:A1:AH2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>5</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cvd_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cvd_death_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>cvd_death_rate</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migrated Data]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Migrated Data' datatype='table' name='[__tableau_internal_object_id__].[Migrated Data]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Migrated Data' id='Migrated Data'>
            <properties context=''>
              <relation connection='excel-direct.175x9zq19fl2om18p8c9g1pynku3' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:AH10001:no:A1:AH2147483647:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='string' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='integer' name='total_deaths' ordinal='6' />
                  <column datatype='integer' name='new_deaths' ordinal='7' />
                  <column datatype='real' name='total_cases_per_million' ordinal='8' />
                  <column datatype='real' name='new_cases_per_million' ordinal='9' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='10' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='11' />
                  <column datatype='integer' name='total_tests' ordinal='12' />
                  <column datatype='integer' name='new_tests' ordinal='13' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='14' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='15' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='16' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='17' />
                  <column datatype='string' name='tests_units' ordinal='18' />
                  <column datatype='real' name='stringency_index' ordinal='19' />
                  <column datatype='integer' name='population' ordinal='20' />
                  <column datatype='real' name='population_density' ordinal='21' />
                  <column datatype='real' name='median_age' ordinal='22' />
                  <column datatype='real' name='aged_65_older' ordinal='23' />
                  <column datatype='real' name='aged_70_older' ordinal='24' />
                  <column datatype='real' name='gdp_per_capita' ordinal='25' />
                  <column datatype='real' name='extreme_poverty' ordinal='26' />
                  <column datatype='real' name='cvd_death_rate' ordinal='27' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='28' />
                  <column datatype='real' name='female_smokers' ordinal='29' />
                  <column datatype='real' name='male_smokers' ordinal='30' />
                  <column datatype='real' name='handwashing_facilities' ordinal='31' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='32' />
                  <column datatype='real' name='life_expectancy' ordinal='33' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Daywise total cases by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]'>
            <groupfilter from='&quot;2019-12-31&quot;' function='range' level='[none:date:nk]' to='&quot;2020-09-11&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_cases:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_cases:qk]</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{60FEA33E-2EB0-46CF-8807-BD6A7DF7F6A2}' />
    </worksheet>
    <worksheet name='Daywise total deaths by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]'>
            <groupfilter from='&quot;2019-12-31&quot;' function='range' level='[none:date:nk]' to='&quot;2020-09-11&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_deaths:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_deaths:qk]</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{3F3467F2-A833-4654-BD53-06C56E474731}' />
    </worksheet>
    <worksheet name='Daywise total tests by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;2020-01-01&quot;' function='range' level='[none:date:nk]' to='&quot;2020-08-20&quot;' />
              <groupfilter from='&quot;2020-08-22&quot;' function='range' level='[none:date:nk]' to='&quot;2020-09-08&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_tests:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_tests:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_tests:qk]</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{E591F69F-1356-46B2-A53D-D0D5C5979F74}' />
    </worksheet>
    <worksheet name='Deaths per million per day by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths_per_million]' derivation='Sum' name='[sum:new_deaths_per_million:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_deaths_per_million:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_deaths_per_million:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_deaths_per_million:qk]</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{74EE8F7D-D11E-4F17-BA14-BC3628484FB9}' />
    </worksheet>
    <worksheet name='Deaths, Cases, Tests by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Max' name='[max:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Sum' name='[sum:total_tests:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_cases:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_tests:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_tests:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:population:qk])))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{0314536B-67BC-4D77-BD15-4B95ABD7B7DD}' />
    </worksheet>
    <worksheet name='New cases per day by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases' datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_cases:qk]</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{B8EE745A-6044-4B88-A3DD-6994B605F6C2}' />
    </worksheet>
    <worksheet name='New tests per day by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='New Tests' datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]'>
            <groupfilter from='&quot;2020-01-01&quot;' function='range' level='[none:date:nk]' to='&quot;2020-09-08&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_tests:qk]' included-values='non-null' />
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_tests:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_tests:qk]</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</cols>
      </table>
      <simple-id uuid='{47335E83-018D-426F-BB6E-66AA291C9884}' />
    </worksheet>
    <worksheet name='Total cases and Deaths by Country by Cardiovascular info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column datatype='real' name='[cvd_death_rate]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[cvd_death_rate]' derivation='Max' name='[max:cvd_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cvd_death_rate:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cvd_death_rate:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cvd_death_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cvd_death_rate:qk]))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{C3A89B58-7DF8-4F48-A158-7DC31CB84652}' />
    </worksheet>
    <worksheet name='Total cases and Deaths by Country by Diabetes info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[diabetes_prevalence]' derivation='Max' name='[max:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:diabetes_prevalence:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:diabetes_prevalence:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:diabetes_prevalence:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:diabetes_prevalence:qk]))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{6DE21D6B-28CD-4CC6-A049-A81CDA9FCE68}' />
    </worksheet>
    <worksheet name='Total cases and Deaths by Country by Extreme poverty info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Extreme Poverty' datatype='real' name='[extreme_poverty]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[extreme_poverty]' derivation='Max' name='[max:extreme_poverty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Max' name='[max:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:extreme_poverty:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:extreme_poverty:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='146' />
                <format attr='maxheight' value='146' />
                <format attr='minwidth' value='1440' />
                <format attr='maxwidth' value='1440' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:extreme_poverty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:extreme_poverty:qk])))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9A331444-FC23-42C3-BC69-3A3E09098D4E}' />
    </worksheet>
    <worksheet name='Total cases and Deaths by Country by GDP Per Capita info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests]' derivation='Max' name='[max:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:gdp_per_capita:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:gdp_per_capita:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' value='64' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='152' />
                <format attr='maxheight' value='152' />
                <format attr='minwidth' value='1900' />
                <format attr='maxwidth' value='1900' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:gdp_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:gdp_per_capita:qk])))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{900D558D-EBB0-4162-873C-96B49B600457}' />
    </worksheet>
    <worksheet name='Total cases and Deaths by Country by Hospital Beds info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[hospital_beds_per_thousand]' derivation='Max' name='[max:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:hospital_beds_per_thousand:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:hospital_beds_per_thousand:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:hospital_beds_per_thousand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:hospital_beds_per_thousand:qk]))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{CC9050E9-DCFD-4C9C-9C5E-1F552487CBED}' />
    </worksheet>
    <worksheet name='Total cases and Deaths by Country by Smoking info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column-instance column='[female_smokers]' derivation='Max' name='[max:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Max' name='[max:male_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:female_smokers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:female_smokers:qk])))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{7D69707C-092D-4935-A495-4519F69E43AE}' />
    </worksheet>
    <worksheet name='Total cases, Deaths per million and Tests per thousand by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests_per_thousand]' derivation='Max' name='[max:total_tests_per_thousand:qk]' pivot='key' type='quantitative' />
            <column caption='New Tests Per Thousand' datatype='real' name='[new_tests_per_thousand]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_tests_per_thousand]' derivation='Sum' name='[sum:new_tests_per_thousand:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests_per_thousand:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_tests_per_thousand:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases_per_million:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:new_tests_per_thousand:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests_per_thousand:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests_per_thousand:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases_per_million:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths_per_million:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_tests_per_thousand:qk]))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{0106A897-0AAC-4DEB-8ED7-3A8CBEE21710}' />
    </worksheet>
    <worksheet name='Total tests and Deaths by Country with Age info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[aged_65_older]' derivation='Max' name='[max:aged_65_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[aged_70_older]' derivation='Max' name='[max:aged_70_older:qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_age]' derivation='Max' name='[max:median_age:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_65_older:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_70_older:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_65_older:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_70_older:qk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' value='85' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='117' />
                <format attr='maxheight' value='117' />
                <format attr='minwidth' value='3660' />
                <format attr='maxwidth' value='3660' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_65_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_70_older:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:median_age:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_70_older:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:aged_65_older:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:median_age:qk]))))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{14FBC4E4-904A-4594-B539-5F915079EAE2}' />
    </worksheet>
    <worksheet name='Total tests and Deaths by Country with Cardiovascular, Diabetes and Smoking info'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
          </datasources>
          <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
            <column datatype='real' name='[cvd_death_rate]' role='measure' type='quantitative' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
            <column-instance column='[cvd_death_rate]' derivation='Max' name='[max:cvd_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Max' name='[max:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[female_smokers]' derivation='Max' name='[max:female_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[male_smokers]' derivation='Max' name='[max:male_smokers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Western Sahara&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</column>
            <column>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:diabetes_prevalence:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:female_smokers:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cvd_death_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_cases:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cvd_death_rate:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:diabetes_prevalence:qk] + ([federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk] + [federated.07elu4v0whxubf1241ezr0d1mtr7].[max:female_smokers:qk])))))</rows>
        <cols>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{BF699C6F-C752-4B18-B23A-E4A90D4DE5E5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Sheet1 (owid-covid-data)' name='federated.07elu4v0whxubf1241ezr0d1mtr7' />
      </datasources>
      <datasource-dependencies datasource='federated.07elu4v0whxubf1241ezr0d1mtr7'>
        <column caption='Date' datatype='string' name='[date]' role='dimension' type='nominal' />
        <column aggregation='None' caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
        <column-instance column='[date]' derivation='None' name='[none:date:nk]' pivot='key' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98632' id='8' param='horz' w='99032' x='484' y='684'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98632' id='6' w='89358' x='484' y='684'>
              <zone h='49316' id='3' name='Deaths, Cases, Tests by Country' w='44679' x='484' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24658' id='5' name='Daywise total deaths by country' w='44679' x='484' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24658' id='10' name='Daywise total cases by country' w='44679' x='45163' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24658' id='11' name='Daywise total tests by country' w='44679' x='45163' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24658' id='14' name='New cases per day by country' w='44679' x='45163' y='25342'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24658' id='15' name='New tests per day by country' w='44679' x='45163' y='74658'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24658' id='16' name='Deaths per million per day by country' w='44679' x='484' y='74658'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98632' id='7' is-fixed='true' param='vert' w='9674' x='89842' y='684'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='32877' id='9' name='Daywise total deaths by country' pane-specification-id='0' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' w='9674' x='89842' y='684'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='32877' id='12' name='Daywise total tests by country' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' w='9674' x='89842' y='33561'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='32878' id='13' name='Daywise total tests by country' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]' w='9674' x='89842' y='66438'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2200' minheight='2200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='24' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98632' id='23' param='vert' w='99032' x='484' y='684'>
                <zone fixed-size='280' h='49316' id='3' is-fixed='true' name='Deaths, Cases, Tests by Country' w='44679' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='10' is-fixed='true' name='Daywise total cases by country' w='44679' x='45163' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='14' is-fixed='true' name='New cases per day by country' w='44679' x='45163' y='25342'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='5' is-fixed='true' name='Daywise total deaths by country' w='44679' x='484' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='32877' id='9' name='Daywise total deaths by country' pane-specification-id='0' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' w='9674' x='89842' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='32877' id='12' mode='checkdropdown' name='Daywise total tests by country' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' w='9674' x='89842' y='33561'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='32878' id='13' mode='checkdropdown' name='Daywise total tests by country' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]' w='9674' x='89842' y='66438'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='11' is-fixed='true' name='Daywise total tests by country' w='44679' x='45163' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='16' is-fixed='true' name='Deaths per million per day by country' w='44679' x='484' y='74658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='15' is-fixed='true' name='New tests per day by country' w='44679' x='45163' y='74658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C7FF631A-0576-42B7-9036-2B58D9BC8561}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone h='49316' id='3' name='Total tests and Deaths by Country with Age info' w='49516' x='484' y='684'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24658' id='6' name='Total cases and Deaths by Country by Cardiovascular info' w='49516' x='50000' y='684'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24658' id='7' name='Total cases and Deaths by Country by Diabetes info' w='49516' x='50000' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24658' id='8' name='Total cases and Deaths by Country by Smoking info' w='49516' x='50000' y='25342'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24658' id='9' name='Total cases and Deaths by Country by Extreme poverty info' w='49516' x='50000' y='74658'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24658' id='10' name='Total cases and Deaths by Country by GDP Per Capita info' w='49516' x='484' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='24658' id='11' name='Total cases and Deaths by Country by Hospital Beds info' w='49516' x='484' y='74658'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='17' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98632' id='16' param='vert' w='99032' x='484' y='684'>
                <zone fixed-size='280' h='49316' id='3' is-fixed='true' name='Total tests and Deaths by Country with Age info' w='49516' x='484' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='6' is-fixed='true' name='Total cases and Deaths by Country by Cardiovascular info' w='49516' x='50000' y='684'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='8' is-fixed='true' name='Total cases and Deaths by Country by Smoking info' w='49516' x='50000' y='25342'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='10' is-fixed='true' name='Total cases and Deaths by Country by GDP Per Capita info' w='49516' x='484' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='7' is-fixed='true' name='Total cases and Deaths by Country by Diabetes info' w='49516' x='50000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='11' is-fixed='true' name='Total cases and Deaths by Country by Hospital Beds info' w='49516' x='484' y='74658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24658' id='9' is-fixed='true' name='Total cases and Deaths by Country by Extreme poverty info' w='49516' x='50000' y='74658'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A436E63B-969E-4CF5-8DB0-BCE9C4CD8498}' />
    </dashboard>
  </dashboards>
  <windows source-height='37'>
    <window class='worksheet' name='Deaths, Cases, Tests by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F06D23C3-D87B-4FAE-A418-928849EA4468}' />
    </window>
    <window class='worksheet' name='Daywise total deaths by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{54B817E0-6D51-4ACD-97A9-EEA3DB185D97}' />
    </window>
    <window class='worksheet' name='Daywise total cases by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B79986AC-518A-4FB2-A17B-681624EEE3F2}' />
    </window>
    <window class='worksheet' name='Daywise total tests by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='filter' />
            <card param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A7BB716-73AD-4587-8AE7-4B828115B652}' />
    </window>
    <window class='worksheet' name='Deaths per million per day by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2EF58D45-7162-41CD-B28E-E24D21B8746A}' />
    </window>
    <window class='worksheet' name='New cases per day by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F35E7301-7897-42DC-B1C3-51D57EFDEE4C}' />
    </window>
    <window class='worksheet' name='New tests per day by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0404B579-EB6C-422C-85C7-6FA1A24F4D3C}' />
    </window>
    <window class='worksheet' name='Total tests and Deaths by Country with Age info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8AB11F9D-5C6F-4E0E-B4E3-701E7DA5C315}' />
    </window>
    <window class='worksheet' name='Total tests and Deaths by Country with Cardiovascular, Diabetes and Smoking info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4E239367-56D8-4FA5-9E63-B067DFA1B045}' />
    </window>
    <window class='worksheet' name='Total cases and Deaths by Country by Cardiovascular info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:cardiovasc_death_rate:qk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:total_deaths:qk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:date:nk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C75E6B91-8C16-450E-8579-CA71B9EA676A}' />
    </window>
    <window class='worksheet' name='Total cases and Deaths by Country by Diabetes info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F33C1723-F8AF-4369-9E43-0A240A619A22}' />
    </window>
    <window class='worksheet' name='Total cases and Deaths by Country by Smoking info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:female_smokers:qk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:male_smokers:qk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C80BBDD1-80FE-45A1-B221-837FDDE45997}' />
    </window>
    <window class='worksheet' name='Total cases and Deaths by Country by Extreme poverty info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:extreme_poverty:qk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[max:human_development_index:qk]</field>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7C8A5684-FBBE-4D2A-8749-C2B1A275EB4B}' />
    </window>
    <window class='worksheet' name='Total cases and Deaths by Country by GDP Per Capita info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3194D044-BA2D-4AEE-95D2-2C0B1F814ECB}' />
    </window>
    <window class='worksheet' name='Total cases and Deaths by Country by Hospital Beds info'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{85E76AC3-D506-456A-9635-4355C936D140}' />
    </window>
    <window class='worksheet' name='Total cases, Deaths per million and Tests per thousand by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5DFED6FA-CAB1-4FC4-BDFC-4D103A08D453}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Daywise total cases by country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Daywise total deaths by country'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.07elu4v0whxubf1241ezr0d1mtr7].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Daywise total tests by country'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.07elu4v0whxubf1241ezr0d1mtr7].[sum:total_tests:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Deaths per million per day by country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Deaths, Cases, Tests by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New cases per day by country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New tests per day by country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='11' />
      <simple-id uuid='{F60A6155-CB19-411D-A7F7-B73551D2225C}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Total cases and Deaths by Country by Cardiovascular info'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases and Deaths by Country by Diabetes info'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases and Deaths by Country by Extreme poverty info'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases and Deaths by Country by GDP Per Capita info'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases and Deaths by Country by Hospital Beds info'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total cases and Deaths by Country by Smoking info'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total tests and Deaths by Country with Age info'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7FEF5AEA-9A8E-4721-95B6-F59F4B9C07AA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Daywise total cases by country' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daywise total deaths by country' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daywise total tests by country' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths per million per day by country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths, Cases, Tests by Country' width='192'>
      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
      +5r/DRI+t1Y7q6o2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='New cases per day by country' width='192'>
      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
      TFbeQv8Nub4fBa0h4CYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='New tests per day by country' width='192'>
      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
      //3p6hJ5ScIfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total cases and Deaths by Country by Cardiovascular info' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd3Ak2X3fP909OSMNgEEOu9gFbvPeHY97WcxUmTRjWYlmkmVaRZklu0yV
      XJJciqUyXZblK4klW5ZE0aRE0eSRYjhK5PF4x4u7t+k2IC1yBgbTk0MH/4G7GczuBOztYhYL
      vE/VFbcff3j9Q6O//dLv/Z5kmqaJQLBHke+0AwLBnUQIQLCnEQIQ7GmEAAR7GiEAwZ5GCECw
      p7G88Y9EIoGu63fSF4Gg5khvrAOYpsl2LglEo1F8Pt+21S8QvBnyLYAkSUiStG03kiSJnG6w
      WWM2i4Isb989BYJqWEoVfu973+PUqVO3/Yv9b7/wHdaiqfz1737yMQ73Nd/WewgEN0PJQfDS
      0hKnT59mfn6+1v4IBDWlZAsAMD8/z/r6Ot3d3Zw4caKWPgkENaOkAD72sY/V2g+B4I5QUgCS
      JJGIquRyadS0TFdbU639EghqQtku0LkLZ1HVOHaXl662R2rpk0BQM8oKYHBfH/NRg3qPrZb+
      CAQ1pWwoxMz0NBOT4ywtLmypomwqzsjIGDk9x+LCCpgmiwvz6IbYbyPYuZQVgNPpYHl6jCU1
      t6WKkuksrQ1upuanee3CCFkty4ULF8nqQgCCnUvZLlDWUDjY30NY25oALJLO1Eqcgf3NJBcT
      jA2PUtcSAhN0XccwDK6Xgq7raJp2K/4LBLdEWQGgJYnipaPJtaWKpqemMS0O4kmNxlCIxeU5
      2oN1yDIoioIsy1wf9KAoChZLeRcEgu2m7NtXV9fA1YmLhG09W6po8EhhsSzggVBb4617JxBs
      M2XHANOLqzQ01CHlkrX0RyCoKSVbgEwyweA9R0jHw6zEjFr7JBDUjJItwLWRC+QkO8GWDiLL
      M7X2SSCoGSVbgJ6+/Xz/B99CN2Hw2Ftq7ZNAUDNKCsDhbeD9H/hgrX0RCGpOSQHMX7vE0y+c
      AyDYtZ+3P3hvTZ0SCGpFyTFAqHeIB08eRrHISCJ1qGAXU3YadFlNEGysAzENKtjFlOwCmaZJ
      Q0MD+/f1MzG7XGufBIKaUVIAWkrlqe9/l5a2blo6+7bVgXNji3z9mSv567ZGL7/yvpPbek+B
      4A1KCsDqCvD+976Tl85eweX2bqsDkViaC+NL+etUZmvBdwLB7aDsGGB8ao6feec7WZkdr6U/
      AkFNKSmAdCrJiePHefWll7jnqJgCFexeSgpg5PzzPP/qZSw2GyurK1uqyDB0VlbDgMbC/DKY
      Jgvzc2JHmGBHU1IANqeXg4ODDA4O0t3esqWK1PAqk9OzQIrLF0fJalkuXnxN7AgT7GhKDoL3
      33MSSVaQJDCMrUWD1jU2414OA9BU72X06siWdoTp19VvmqbYJSaoGSUFICtK/t9nz57hxInq
      44Dl+WlWV1dZjTTSFGpjcWWO9qZA1R1hilzcCEmSJHaJCWpG2Tdt9NJZUppEUtvayxgMdRIM
      dW5cBKC1reG2OCgQbCflT4jRc5y/cBHZKvICCXYvZT/vTa3tdIYTWEX+fsEupqwALg+PkDN0
      LMlILf0RCGpKSQHoukZXdx/hlXnSsr/WPgFwaXKF9KawiN5QHXVe5x3xRbB7KSmAsXM/5ZtP
      n6GtrYNDR4/X2icA/vzJ00wvqfnrz//cKR64p+OO+CLYvZReBzj2EJ/q2Mfzzz7D6OQsRw5u
      b0ToVplYWOfJ54bz13VeBx9719E76JHgbqekAK688kP+73dfYGBggJ7Oulr7VJZVNcnTZyfz
      160NHiEAwS1RUgAH7v0ZfufEYwDbenKkQHCnKb0SLMvIsjhEXrD72RUxB1/81hmmFgvTtR94
      +CBDPU3MrcTyZYoi0dO6c7pzgp3BbRPA6uIMc0vr9B/oY+TSNEePHeDcq6cZOnICm2V7W5OJ
      hXWuTK3mrx873sPkYoTPf/GH+TKfy86X/vO/5At/9wJnRwuHfvzc2w5x38E2/vr75/JlsiTx
      uY88wOXJFRbD8Xx5d0uA7pYAaiJddP+Ax0Eqo5HJFYL47FYLLof1tv6egtvPbRNAOJpkcH8X
      M0vzxNYjxOIqa2qSnRYNncrkiCWz+etsTieZzvGT89P5MkXeEMBTL4/z43OT+fIPPzaI3+Pg
      E3/0ZFGdX/3tD/Llf7rAP74wmi97z1v28fF3H+U//tkPimx/5+OP8sKlWZ56eSxfdmIgxC+9
      8wh/89R5jE37J9734ADzqzFeuVo4r7m9ycfbTvZyaWIZTS9E0va11eNxirCVm+W2CUDXNdLp
      NJJioTnYwMXzVwm1BW9X9XclpmkyuagWlemGSSSeLirvag4A8ORzw0Uv9aPHuhmbW+cbz17N
      l50YaOVtJ3v54688TyReaIn+4NOPk9MNvrVpmrg96OMT7znGE994hTW1kN7mo48P0dnsZ1VN
      5cusFpmWes9t+K3vLm6bALrbQ0wvhunr6yDp1fElfLhdDqyKmEWqFWtqkjMjhe5dIr2xkn5p
      Ypm51cJ46F3393N+fIk//Nvn8mXtTT6e+Nx7+IMvPcv4/Hq+/JPvPUaDz8kff+X5fFnA4+AL
      /+4dfPunw0xtWqx86HAn/W31nBsrJDmQZYkHhtoZmVljJVIQYWezj2DAzenh4jPoHhhqZ2Ix
      wuJaoesZavTQEfTz0uW5Itt7D4RYCMeYXS78bsE6F/vaG0hel1zBYbWgGwa5TR8YRZYKAkgm
      k1ve/FISyUpbazPpZBZZBq9342uSTiY2/jedptlvw2Ep3MPUMshmjrZ6e76swWMhHo/T5LWg
      5wrlkpEDXS6ybfTZiMfjNLgtReUWNPRcpqjM49iwDTiL67DJOrlsuqhMkWXi8Tg+h1RU7lRM
      MqlkURlAKpnEZaOo3G0zSSYTN9hmUkkcilFU7nVIxONx2ursaJv+Blo2jU3Wi2wDzg3fWvw2
      3LZCd8nQsihoxc/SrRCPxwn6rGBs8kPPIpnF/gZ9VuLxOAoadkXPl+cyaTJpisqskkY8Hufa
      7DLDM4WxV3+rB5fV5MtPnS7YKgqHugL8+MwI58YW8+VvP9nHvQdCRbYAQ51+nj8/zguXClnJ
      HzrUiffevhtse5sf5pXXZvjR2Yl82cmBEK0BO5//4j9jbMpq+B8++lauTK3ynRdHCvfqDiKZ
      5oaVrutsJ9FoFJ/Pt633EAhulnwLoGzaBbYdyLKMJF2/+0sstAnuLDVdB/jUH3+LtWhh4PW7
      n3yMw33NtXRBIChCLPcK9jRCAII9TdkuUCS8RjaTYD0lM9DbXkufBIKaUVYAly6dZ11N4fX5
      hAAEu5ayAhjc18f4Yhy/z11LfwSCmlJWAFdHRtAVF3an2Icr2L2UHAQvTg0zem2O+YUFwuvR
      Mj9qEomsY5gQV9dYWAljGjpTExPkdJNUKkk2lSCT294FNoHgVigpgKZQF/UNfo4ePkwupZYy
      IZOIcvHSZXQjx8T0MonwIuMjI7gCdQyPjDE/P8fI2DUURUw0CXYupbtAponfX0cqlebosdJZ
      IexuPy2NATA07E4PXofO3GqC7oCf9ZVlwstz2P2dKFLl5LgiEa7gTlJSAIrNid+h8MqZl5ha
      WONfvOuxG2wS6hqLSysorgakXISFpEx/ZxMXz52nsbUDt9uFrGeJpnL4XbayyXFFIlzBnaTs
      26c4/fR2hEhJpbswbn8DDz386OtXhTMEjtXv7T0AgruLsh10j11Gt9ezv7utlv4IBDWlrABW
      w2FW58e4MjpVS38EgppSUgCGniWTTBKLZTl6rzgkT7B7KSmA8Utnadx/ko//0r9i5OK5UiYC
      wa6g5CDY0LO89PRTvCKDzddUa58EgppRUgADxx5i4FitXREIak9JASxNj/D8mUsANLb18tB9
      R2rqlEBQK0qOARpDPRwb7CedSpLOZGrtk0BQM0qvBFuszK+phNrbsMi5UiYCwa6g7EpwW2sr
      VsVkejVVzkQguOspKYBcMsK3v/0kbR29BJrFbjDB7qXkGMDqCvCRD74fh91KR0dnrX0SCGpG
      +ZPixyd58JFHeeWll+nv2L4At+cuTPPEN1/JX/eF6vi9Tz2+bfcTCDZTUgAxNcyB/ft44ac/
      pXvgcNVKro1eIWNY6eloZmR0nFD3AJKWQDY07P4mXLbyWec03SCZLgy001mxP0BQO0oK4Nrl
      08yoEnZFIhqNsDnc+UZM1sPreBtDzM/MM3DoCBOjI2STKpLNzz2NzRubYUzzhg0xhmFgmMUJ
      eU1z+/OUCgRvUFIA7kCQBw8dwGEBuVrOUBMOH7+PuYkR1LSBruuYpoTFZiWnaze89JuRJAnp
      um0yEiJfqKB2lBRA/8GbOXrUZG56grTk4OBAC6PDV2jr3o+ZS2KTDeLpHD6n7fWXvRhJkm58
      2SXEAX2CmlF1P+Lp0y9z8uR95Q0kme6+ffnLoXsOvf4ve2n7beC3/vfTXJ0u5Kn/lfed5PHj
      PTW7v+DupawAxq5cwNsQJFfDF/nNktX0ovQrurHDDiYT7FjK9jWsksaX/vpvUZx779wowd6h
      fBdIttG/r4+VhTkY6quhSzuHL37rNM9dLBzV875TA3zo0cE76JHgdlNWAHOrEerq67Bs88kx
      O5lkWiOaKETDpnNijWK3UVIApmFwz+A9qOtLpCRvrX2qOSuRBH/+5Jn8tSxL/OYvPnQHParO
      J/7oyaJjUn/vU48z2C12790sJQUwfObHfOu5SwwN7CPU1Vtrn2pOKqNxerhwGLUi3/w6xFd+
      +Bo/erVwWuFjx7r5ubcdqvATt4ZumEWDfdMUA/83Q8lB8IF7H+czH/8oKXWZiZnFUiaC64gn
      MyyvJ/L/bT6NXrBzKSmAkVef4Qt/+hdkZBdd7ZXCIASCu5uSXaDuwXv5TMfGbIfV7qipQ5VQ
      E2muzRVOMbfbLKLfK7glSgrA5nDR5HDV2peqjMys8Xt/82z+urXBw5//+s/eQY8Edzu3NTVz
      dGWOsdkVAk2tKEYKI5Mm2LUPd4Vw6LsNwzSLwrcB3A7rHfLm7sYwTJKZG59lLYMhb6sAlteT
      HDl2lPGRUdZWZ3DUd9PzJl/+//rV51kMx/PXH3vXzaVmmViI8MQ3Xs5fe5w2fufjj74pXzaz
      HkvziT96sqjsq7/9wVuuF+DzX/xnNL0QHv7rH32A1obtmYaeWVb5yfnp/LXfbedn37p/W+5V
      jtVokk//8beLyr72Xz6MzVq7D+ZtFYDPITM1PY0uWahv6SSbjJPK6jjfhAimllSmlwqn08ST
      WSyWrUeJprM5RmfDBd9cGzFNr44ssLyeyJcPdDa+qWnPW2F0Nsz4XMG3UKOXw33NjM6GiwSw
      ncdLza3G+PunL+Wv25t8Ny2A9Via7KYDTrxOO5ph8Pym1XNFlnj7vdsXSRBPZUmkCzNuDpsV
      v7t0/NqLl2d5+tXJ/PW+jvrbK4Cmjh4s4XX87fXoWg6LLKHtsOnp7744yitXC3P+H3/3UY7v
      b92We2VzOr/2p98vKvuDTz/OK1fn+LsfFV6+R450cbivuWQdhmFibJrjlyRQyoSL32ALKIrM
      xWtLRTvt9rU13NTvMb8a4x9fGMlfu+xWfuEdh/kfX3+JV0cW8uWfeu8x7ukN8mdPns6X2SwK
      b7+3j/H5MOFoIcNIqNGL1bL1D6NpmjcEOSqyxDd+cpV/eOZyvuzx49382ofewl98+1U2b8H6
      8KODzK/GePHybL7MMM2CAOLx+G3ZiaVYLMRjxQfrpYBkMsmpg8GiPp9d1vA74G1HQ/myRr8L
      VVW5b18D+1sLR7R6bCaybBTZ+lx2VFXlWG8dbXW2fHm9S8JCrsjWbrOgqipDHT78mya2mn0W
      TC1dZCtJEqqqsj/kxkKhvKPOTjadKLIFSCbidDc5i8p7gk7isSiD7cVdmHQyQVudrdi21YOq
      qjx+pBVj0x9Z0jO89No4pzcJtq3Jx88c7+HBwWDRS22VNM5dneSnrxW+vk0BN+++v59Xr0wW
      hXQ4FQOP1Szywe92oKqlz4OLx+JkUoVWUzasqKrKoU4/9a5C69nktSDp2aJ6FVlGVVWujM8x
      sVCYwTvS30J/W/0NzzIej5VskXOawVd+eLGo7MOPDtHRYC+qo69l41lmUokiAcRiMVp81iLb
      jqAPyazREqKqqvj9/lrcSiDYMmLrlWBPU3YMMHzxNGNLcbpbGxkauqeWPgkENaNsC5DNZJi7
      dpnxmdVyJgLBXU/ZFqCprYePHTrJ+nq4nIlAcNdTNjfo//uHv6O1vYeGUBctLdszTSgQ3GnK
      5gZ9/OFTJFMJ0ul0KROBYFdQdgwQz5m0NNVh5oQABLuXsmMAm2ly+OQD2KzVwqFNJkaukjIt
      tDd6GJ1ewl8fRIsuE8/BkSOHsSpitlWwMykrAKuc5Vvf/Db9Bw/zyFsqZYrTmJ9fweXzMpvV
      GDp6lOmR15BtdfT4TaKZHAG7BcMw0DSxqVyws6i6EpwKzzIZVTjYXW4gbHD+7Dm8LgcaEpLD
      Qy6VxsgkkWSJngNDuKyKWAkW7EiqBsOZho5uVIqWlBkaOoiayFIf8LEeDuPraMfIJElp4Kph
      aKtAcLOUbQFymRRr6yqSmUNy+AnW+W7pRqIFEOxEyrYAp196Dk1y4G8Kcbj11l5+gWCnUlIA
      i1PDjIzP4fR6MKy7PzGWYPv50lPneXW0kGLnXff18c77+u+gRxuUFEBz534eOGXS17ePsbHR
      Wvsk2IUsrSe4Nl/YDxCO7Yz1pZIC0FJRnn3maS5dHqZ7v4gEFexeyoRC+Ln36CHCa8vMTE+X
      MhEIdgVll2hlh5eeztab2oguENxtlJ0F6goFyZg27mlprKU/AgF///QlnrtQ6Hk8crSbDz5y
      cFvuVVYAF6+MoEtwaW2JYPDRipWYpsH4+AQ93e2MjY7T3NGLFl8lkjbp6+rgzeQ5+uyffK8o
      Lcp/+vlTPDDUcfMV3UFyms4ffOnZorJ//5G34HfvnHSTO5FwNMXUpr/9eixVwfrWKCkAQ9fY
      39fNT188w/4j91etZGl6guVwDKc8RbC7n/nJUSTTitcuEc3k8Nk3bnMz++9Nk6IjVk3z7ksB
      rhtG0dQfbKRKudt+j23BNMs+h1Kl2/XMSgpgdX6Sr3/nB7S3dXDl8mUO9raVrcDUs0zMLhKL
      xgjbQgS6rCiyCViwWiQM09w4EPv1/7bK9cdqmzf58zuBUv7e7HPYLVz/Apuvvxe3anurlBRA
      sKOfR+5b5tpiBKe9cpJcSbHxwKlTLC4sUF/nZfi18zS195KLLrOaMjnosCJLErIso9zEcUvX
      54e82Z/fCSj6jV8tRVHuut/jdnD931Oq8PeUr7eVpG17ZmXHAIPH38oBwyAbXWJsdpn+9mDF
      ilpaN6JFDx15PXS6QYRPCHY+FaNBZVnG0LKks7c1g6JAsO381l8+zeae1Gc/eB9NAfcNdiXf
      7Gh4ifGpeSRJwmqRqGvu2jZHBYLt4ML4UpEA0tnSaT9LrnJZrDYmJsZxezzML63T1hTYFicF
      gjtNyRbA5a3j1IlDvHzxKsH2Ox+xJ9gaT786wRPfeCV/PdDZwO9/+mfuoEc7n7Kd+3gigcVq
      p6sjVM6k5lwYXyo69CJY5+F3P/lYTX0wTZOsVtyc2ixKTU81KYdhmuQ2nS+glZiFEhRTVgBe
      XwByMzz/8hk+8O7avmTlyOQ0FsOFNN134qULlzkhxmnfnmOSRmbWODdWWExrbfDy0OHObbnX
      zfJX3zvH8Mxa/vpnH9jPqUN312p9WQGshFUeeft7WF6Yq6U/guu4MrXKl/+pkBf/xEDrjhHA
      1JLK5cmV/PVbh9rvoDdvjrKhnrlkhJ8++wxXxqsLIKGuMTE9h2kaTE9cI6MZJNQw80trVX9W
      ILiTlG0Bjtz/KOl0GrujeuBWKmeiZKKMXo3gbW5ndHgYDAOXTSYe8OOxi3UEwc6k7JspSRJO
      p5PTp1/m5Mn7KteSS5FR3DjMNIGAj9jKDODB54SsoaPr0k0nxro+HkQ3DOQSU7m1Tral6zfe
      T9d1NO3G8YhW4sgpXdNvyufrY2BM0yz78+Vsf/v/PFM0dvrM+09wpMyZZDfD9X+jSn/jG+J7
      Kthe/3sYpkEmk+XFK8W9kXsPhLBt8ZwxXddK3q+sACZGr1IXbEG23bh6dl3VTE7O4PTV0xSq
      5+r589QH28jFlpiJSBxqt6HIG7FAFsuNt5tciPDCpcK5VvU+F++8r++GAa4iy8glUiyWqnM7
      UZQb76coSkk/9BLxW4qltG055OsOxJMkqezPl7Ndj6VZVZNFfpWrY3IxQjpTeFFaGzz4PaV7
      AaXitcrVWyoWaKu/hyzJ6KbEf/v7l4rK/+o33ofLUfpEyOtRFEvJ+5X9SyhGkif+9H/yjg/8
      QrWqOfnAW/NXx+reiBlq2pJjk4sRvrrpxMR97fW8877tO1ZzJ/C1py/x9Weu5K8fPNzJr37g
      PlYiiSK7Oq+z1q7xxDdeYWTTzM6vfeh+Hj/eU3M/akVZAfiaOvnlf/PLrKvxciY3zW/+xQ+J
      xAvZAD77oep7De4Wvvb0JX58bjJ//fCRbt7/4EBJ25xukNp0wmP29fOAf+UL3yk6J/hPPvuu
      7XF2F2Fcv3FEujGatBJlBXD5whlGpuZpaO5gf3/vrfiYZ2Etztqms2IzZeIztpMXLs2wsFYQ
      9aHeIPvab+7c3FJE4mlmV2JF17uFdEZjIVx4ZhZFoiNYOsvf4lqcJ75ZWI22KjK/9a8f2Tbf
      vvyDiyXPCd4qJQVgmiahzn1YbHaS0s5PjPX7X3q2qNn+5HuP8fCR0gF8PzwzccNB2eUEcHV6
      laVNg8fOZj++MqeQ323kNJ3Upr6+LEt4nLaStmNzYX7zf/0of13ndfBXv/H+krapbI4L40v5
      60qD1Ggiw19+92xR2a9+oMqEyy2QyWlFH12LRS4tgOEzz/C9F4cZOtBPY8vOF0AsmSn64mZy
      N9eyROJpvv184SR0WYKff/thvvfiWFG35sOPDfLu+/fdsr87gTMjC/zh3z6Xv25v8vHE595T
      Ux/SOY2nz04WlX3m/fdu2/2+88Iof/398/nr+w62lRbAwPGHCXbu49lnn2PWtHP8nv3b5tR2
      MbOs8jdPXchfu+xWPveR0k1jNJHhH35caEYVWeLn33542328Ff77114kkc7lr3/xHTvb351K
      SQFce+0Fvv7UC7SEOjgy+GaC4UyGL10gnoXDhw9jVWofsxNPZXl507yxz7U7ui5vcHZ0sajV
      KzfgFlSmpABCvffw0Y9sxHU43G+mC5RFsgTo9ppEs1kanLvr5RPsHkoKwOnx0+W5lVz+FrIZ
      leWcRFfL3RUdKNhbbNMyqkJ/fw/JLLhsey8DguDuIS+AeDyOXiJ25VZQpI2TYQDS6TT37W8k
      kcrm/38rObx2k4eHCnEpTQE3qqpyrKeO7sbCErzLaiBLxbZ+twNVVTnU6afJUxCa3wGKkS2y
      ddgtqKrKQMiDUymUN3oUjFyqyFaWJVRVpa/ZhbGpPOS3kUklimwBEvEYHQ2OovLOBjvxeOwG
      22wqQavfWlTe1+xCVVUeGmxG3xQHY+bSNHrkItuOZi+qqnL//kZSmcIg2EIOn50i2+Z6D6qq
      cqKvnr7mQnobh6KDWfwsA96NZ3m4y0+Lr/Bd9NnBQvGzdDmsqKrKwTYvHmvB3wa3gqllimwt
      ioyqqvS3uJH0QnmLz0Iunbzh+cRjUTobi59lR4OdROLGZ5lOJQjVFT/LnuDGs3x4qKUo/sjI
      pWjyKEW2XS2e6ofk3S5M07whHuSNW19fbhjGDfEg22Vbrnyn2EqSdEefz83amqa5Y59lKdua
      CeB28kZ2NVlWkOVKM0wmqWQS3TCx2R3YrJV7fNl0EjUWx+X24XZVDgPPZdJEolEcLi9ed+WY
      HS2XYT2iYnd68HkqJxrLZrPYbKUXpG7ANElns1jKBONdb6vpOpIkISsKlZ5aOpnE5nRR8dFu
      qlfXdUwkFEvlerOpNIrDTi6dxuZ0lt+MAmAaaLpBKpXG4/FUzC+r5TLoKNir/H3f8FfTDVLJ
      BB6vb7vGADeDyfLCfD42pqk5hMtRaXthjpd+8gymbKOp9xD72usq1q7lcqTjYWazLg70tFSw
      NLh6ZZhQRwdbyeZ79coVWts7trQt8+qVK7SE2reUJDgVW+fachhDttLb043DVv5PNDZ8mUjK
      wO2wcvDggYr1TgxfZnIpjMfj5eSJSuc+Qyy8wGxEI9TcSLCpoeJLvTw5yrmJRXxuFyfvP1nh
      hTK4/PKLGMEWsusxjr/1XirJPLIwzZyaIBJOc/yB4zgrPDwjl+LVC2N0dbbT1BLEWuJL/wbZ
      VISxkWvEcjJd/QOVRVgbTBwuD1sfKiu0dffi8TpxV91oY5KIx4lndHyeapGVEhaLxMrKColU
      pqoXNqvC8soK8UT1zMUOm4XllRWi8eq2mWwWi81BW0sja6vrFW0DdXVkEiqStXrUqMcfoCPU
      jMNVLbwdXB4/WirG8spayUS1m3F6vXR3tWF3uCoKBST2HTmKzyrRd/BAxZcfwNsYxKI4GRjo
      wl7lw2GxOrDJOjPzC2BW7hFY7B4Uh4eB/k78bvtOEICMz29ndS1OS0sD0U1x6zdiElWjWBQr
      /vogPnf1rkI6q9PTu49QU+Vp3VgsRlOwGbfbXbWrBODzeTA0veSml+vxer0bG0Byuaq2aiSK
      nssQTeZoC1UOKV+PxHjLqVNIWvXAu0Q8TnvvPmxS9SSzKwtLYHNiQ68qACSZXDaH2125awcS
      6fUlHE1drExdI1vF2kTC7bQycW2SatuHUrF1AqFeQn4X8UylZ2wwfvU1llYijF69Siyd3QkC
      ANCwKjaujQ4TTVT++sYia8wvLROLhElkqu+sSqqrXHjtEquRymHdbrcHXcsQj8XJ5qrXux6N
      YeoGarjyVxpgLRLF1E1ikXBVWy2XQd/IBV/VtqHOy/DVq9g91fOw1tcHGB++isXpqWrb3NFB
      b1sQi9tX9QVJx1UsLj/1df4qLQA4/T6WJsdI5XJMT85WFJdpboz1LLJSRYQmFsf2pywAAAiM
      SURBVFcAM7FCAhu+it1nhd79B/C6rVjtDmyKslME4EImSk5TaAxWykIn0dbVgc3qYqA/RDic
      qGC7gSlr2GVrlZYFZBnW1sMYOZ21leovqs/XQEdniO6e6mkjA4EGOjtbcW3hRe3o6sHldGKz
      Vk+zkk5ntvQHTKpRDIsNj9uF016t1dS5ePosq7E4q4uLVGovtGwGq7cOLR5mbW29amuhODx4
      nTbqGhtpC7VUFIyWiqO4Ahw7eQx7xcGTwdTwZdYSOrHVJeLZyh8vWbES8Hlwun3YrfJOEUCW
      ZDyLKemsr1d7qW2Egh4uji7T3VFftWarojA7O4elat4eiY72bmTFJNReabC8QWxtfuNchHhl
      f7OpGJdee43Z+aUNlVVhanqGWDTO6vJCdR+iUZweLy5n5Rkrl99HJh6nua2DUEtTlS+1TEdP
      JzZFobu3u+ILIskKLo+f1pZmGhvqqrYAYGKaIMkWZicnKwpGsTtYmh7jypVRtIqtoULvwAAO
      xUSx2ysOgAG0TJy0bqWzsx2bZce0ABZ6Dw7S1dlLd1u1PKQ5ZuZWCTbWYZTadLuJmYlxcoaV
      Y289RWdL5dkiMJmcnKa+3sfSUuUWYHVxDsPqxqZIVb96NqeXo8eO0ljvw7mFDBttHR001Lnx
      1lXfUtrU1Mjq8hLr69GKdqZhYJFNLpw7x7WpuSo+S2RTSWbml1icm6vYAigWC+HZSVbjaTLZ
      6uMbPZMindNR19dwequ0hoaOljNI5apPSChWOx6nHa/Pj6VK4KVic0IuwcTEFBlN3ykCgEvn
      X2VtPUK66oOUMY0ssViMnFZ5ABpejxJs9jF+eYxUptqwS0IyNdbVGCuLM6gVxiKNLW0MDQ0x
      NDREa1M1YcHywizL60nCK4tVbeemJkjnTGzW6vNiSysR7HYHerZy9251apwzVyZpbGrAsYVN
      5I2hVvraW3F4/BVfkFwmwUokghpeJ55IVv0YJCMRmjp7cCoKa+HVivbpWBTFqpCIJslVqTgR
      WWF5fpWcoZGssstQyyaZGZ0kmooRT2k7Yx1ganycQLAJNbxGQ0ul7GIms5OT2N0eDMOo+sB7
      enpI53J0drmqjikXFxY4OHSQi68N039gEP9t2vmViMcJtjQTT2m4vdW/6oahk0qnsdirD8Tb
      OtrRsinSRuXuXWN3H4OyDW99HdkqfWQtHWPk2jQ2q5VEIs7iqp/WxtKtspHL0tI7RFPAzfzs
      bMV6TUMn0NHH1LUx7P56QvW+sl0m09SI5yQaGxvIZg1sVfpWLn8jA4dtLC6Fq+agslhdDJ0Y
      YmkthtO2I7pAOom0hEXT2D/Uw8p8pe6HRHt3X/7rWy1rgq+unmCwmebmZlyOyoO/1dU1ro2M
      0juwj9WllYq2N4PD6cRmd9PZHsLcQj4gCWkjBcwWlmHDS7MkNAW/t/IUZCYRI5FOcenMWZJV
      EubGVpZp6trP0NAgHqebYJmXHzZe6rm5ebRchoWF5Yr1pmKrzC1GyWkgxVRkj6fCmEGhuSVI
      Np3F31B9JsoEclkNLRUnVXE3oMHS4jKaKdNQH8BWbktkbZFxWA0Susz0xCIt7XcmBce+vi5W
      1Awem5WuztuXEds0DbJJlWfPXuDIvdX3u7Z2dFNXX191hTkRjVLX3MzSokrSZsXtKv8xME0D
      05QwTbNqyESgvZvV4WEuzZsEgq0VFygdvgb2tUuMXZti8MjhiraK1cbq4hTZbIq4bKNSWi5J
      koitLLC8opLJZfAE6nFVXN8yyWQyKBZrlfANiaZgPYsrifway10ZC3Q3EYussbquomk6/vom
      gg2VB/njl8+ylpZpbWmlI1T+XLbJS5ep39/K1JUIBwc7sWwhQ5qha8QTKbw+7xZmbO4kJlou
      y7XRUTSrh4P9XRU/COnoGuGMBWtWxdEYwluhG2Roac68cg6XP0BPf/9O6ALtbryBBvRMnLW1
      CCsrq1XtffVN1AUCKFLlwVxDKMjS5ApWW5bFlepJiBPRdcavXSN8G/M8bReGnubsmXOsRuIk
      wqtUmxax2B2sLkwxvxbFViJ7YFHdhk4mmsTtd5JK74hB8O5HsrpwO7QtHfa8HlFR1SQJp4vQ
      6ydvlsJb14i3rnFL9zcMnbnpWZq6+3BuJWLyDmMYGTTdiqbFsWkGaZMKA+E0i8spGhsa8dgU
      MpqO3VJeBBISyDozs0scPtQqBLDdrC3Nkk6laWjrJVTlrLVMKkF7Zwfzz79CT+ftSUYGkEsl
      SOU0VhbmMUyZgf23r+7tQLH4OHb84OuzfBKOiv01jZnJaTQzQZ3TQfCgHx/lZ8UkxUpLZztZ
      XcK6MwbBu5uVpTDNHS1MjEzgdx+suM9gfnKSpt5O9h08RiS8CK23nrEOwOZysr60jOJwkMns
      /FPqJUnG4dxqXlQX9xzp30iRiISnYvYPk2Q0TMZ00NPdgt2iiEHwdpOIRogmU5iGicvjI+Ar
      H4wWCy8xNr2E1QIOTyP93bdnNso0TdZXltFlBcVioy5Qfg5+d2MwPz1NIqtjkRVa2tuFAPYK
      Wi5LJptlbGyCw0cO7VEBwNL0MOPzKXx2jaaeQdEF2iukkwnWIlG8geqhG7sZX32QgLpEU1uQ
      gNcpBLBXSCdjxBJJZGWL+413KYoCy9OzOPxWNHNH7AgT1IJUIoXb4yGb2T1p298MVruP1s5G
      1GiWhkCVjfmC3YGRTVHX1gOZOI3ByhtRdjc6k+Nj6LKF1bkZ4umcEMBeYHnyGmkjSyQto64u
      Vt/nu2uRcTjsKBY79z/4MPU7Y1O8YLtp6upiZniU/v5e/IFqG452MzrRaBzD0JibniKZ1cQ0
      qGBvI1oAwZ5GCECwpxECEOxphAAEexohAMGeRghAsKcRAhDsaYQABHsaIQDBnkYIQLCnEQIQ
      7GmEAAR7GiEAwZ5GCECwpxECEOxphAAEe5r/D27zHqpIYWfxAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total cases and Deaths by Country by Diabetes info' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total cases and Deaths by Country by Extreme poverty info' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total cases and Deaths by Country by GDP Per Capita info' width='192'>
      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
      /wdAiSBkj69tAgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total cases and Deaths by Country by Hospital Beds info' width='192'>
      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
      /H+7Usx39r7sJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total cases and Deaths by Country by Smoking info' width='192'>
      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
      EeRCEbDx/wN4zp17qk8b5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total cases, Deaths per million and Tests per thousand by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total tests and Deaths by Country with Age info' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total tests and Deaths by Country with Cardiovascular, Diabetes and Smoking info' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
